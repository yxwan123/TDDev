{"id": "000005", "instruction": "Please implement a dashboard website for displaying regulatory policies. The website should have data visualization capabilities to clearly display complex regulatory policies. Users should be able to browse and analyze different policies, view related data and charts, and be able to filter and sort as needed. Assign lavender to the background and indigo to the UI elements.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Data Visualization", "Static Page Generation"]}, "application_type": "Analytics Platforms/Dashboards", "ui_instruct": [{"task": "Test the data visualization feature for a selected regulatory policy.", "expected_result": "Selecting a policy should present corresponding charts and graphs that accurately represent the policy data, enhancing user understanding.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Data Visualization"]}}, {"task": "Check the filter function for regulatory policies.", "expected_result": "Users should be able to apply filters such as policy type, date, and relevance, and the displayed list of policies should update accordingly to reflect the input filters.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering"]}}, {"task": "Assess the sorting functionality within the dashboard.", "expected_result": "Users should be able to sort policies by criteria such as date, name, or relevance, and the list should reorder to reflect this criteria accurately.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Filtering"]}}, {"task": "Confirm navigation between different sections of the website.", "expected_result": "Users should seamlessly navigate between different sections such as policy overview, related data, and visualizations, with the current section clearly indicated.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Evaluate the clarity and relevance of the content displayed for the first regulatory policy.", "expected_result": "The description and details provided for the first policy should be clear, relevant to the policy intended, and assist users in understanding complex regulatory information.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Assess the policy search functionality on the website.", "expected_result": "When entering a search query related to regulatory policies, relevant results should appear, allowing users to quickly locate specific policies.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Verify that the website uses 'lavender' as the background color and 'indigo' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'lavender' and components (such as buttons, cards, headers, etc.) are styled with the color 'indigo', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000016", "instruction": "Please implement a website for a solar company to display company information and products. The website should have functionalities for company introduction, product showcase, news updates, and contact us. Users should be able to browse the company's history, mission, and values, view detailed product information, learn about the company's latest news and events, and contact the company through the contact page with name, email and message. Use lemon chiffon in the background layer and chocolate for the component layer.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Static Page Generation", "Dynamic Content Rendering"]}, "application_type": "Company Brochure Sites", "ui_instruct": [{"task": "Navigate to the \"Company Introduction\" page.", "expected_result": "The page should display sections for company history, mission, and values. The information should be relevant and correctly reflect the solar company’s background and goals.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Navigate to the \"Product Showcase\" page and select the first product.", "expected_result": "Detailed product information, including specifications and images, should be accurately displayed. Content should be clear and match the company's product line.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Access the \"News and Updates\" section on the website.", "expected_result": "Latest news articles and event updates related to the company should be listed in reverse chronological order, with correct dates and comprehensive details.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Fill in and submit the \"Contact Us\" form with valid details (e.g., name, email, message).", "expected_result": "Form submission should succeed without errors, and a confirmation message should appear to acknowledge receipt.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Communication"]}}, {"task": "Use the website’s main navigation menu to move and return the homepage between the \"Company Introduction,\" \"Product Showcase,\" \"News,\" and \"Contact Us\" pages .", "expected_result": "Navigation should be smooth, with each menu link leading to the correct page without broken links or errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'lemon chiffon' as the background color and 'chocolate' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'lemon chiffon' and components (such as buttons, cards, headers, etc.) are styled with the color 'chocolate', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000025", "instruction": "Please implement a web application for an insurance industry automation system to manage insurance business. The system should have functionalities for customer management, policy management, and claims management. Users should be able to browse customer information, policy information, and claims information, and perform corresponding operations. The system should also have data analysis and reporting capabilities, generating various reports and charts. Apply theme using whitesmoke as background and dark cyan for elements.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "Big Data", "Data Visualization"]}, "application_type": "CRM Systems", "ui_instruct": [{"task": "Navigate to the customer management section and view the list of customers.", "expected_result": "A list of customers is displayed with accurate and relevant information, including customer names, IDs, and contact details.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Click on a specific customer's profile to view detailed information.", "expected_result": "The detailed customer profile is displayed, showing complete and correct information such as personal details, policy associations, and claim history.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Navigate to the policy management section and view the list of insurance policies.", "expected_result": "A list of policies is displayed with accurate information, including policy numbers, types, and status.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Select the first policy to view detailed policy information.", "expected_result": "The detailed information for the selected policy is displayed correctly, including coverage details, premium amounts, and expiration dates.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Navigate to the claims management section and view the list of claims.", "expected_result": "The system displays a list of claims with relevant information such as claim numbers, statuses, and associated policy numbers.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Access the data analysis and reporting feature to generate a report.", "expected_result": "The system successfully generates a report that contains accurate data, presented in a clear format, with various charts and graphs illustrating the information.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Verify that the website uses 'whitesmoke' as the background color and 'dark cyan' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'whitesmoke' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark cyan', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000026", "instruction": "Please implement a polls website for users to cast their votes. The website should have functionalities for voting and viewing voting results. Users should be able to browse different voting options, cast votes for selected options, and view voting results. Color the background using white and set component styles to navy.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "Data Visualization"]}, "application_type": "Discussion Forums", "ui_instruct": [{"task": "Test the navigation to the voting page from the homepage.", "expected_result": "The user can navigate to the voting page without errors, and all voting options are displayed.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Check the ability to browse different voting options without casting a vote.", "expected_result": "The user can view a list of voting options, and each option should be clearly displayed with relevant information.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching", "Filtering"]}}, {"task": "Test the voting functionality by casting a vote on a selected option.", "expected_result": "The vote is successfully recorded, and the user receives a confirmation notification indicating that their vote has been cast.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Check the voting results page for the display of current voting results.", "expected_result": "The user can view the up-to-date voting results, including relevant statistics or graphical representations.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Data Visualization"]}}, {"task": "Verify that the website uses 'white' as the background color and 'navy' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'white' and components (such as buttons, cards, headers, etc.) are styled with the color 'navy', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000037", "instruction": "Please implement an e-commerce integration feature that allows customers to customize shirts. Customers should be able to input information such as shirt model, fabric, and measurements. The system should be able to generate a corresponding shirt design based on the customer's input and allow them to preview and confirm the design. The system should also be able to handle orders and payments. Declare floral white as the global background color and dark goldenrod for all UI pieces.", "Category": {"primary_category": "User Interaction", "subcategories": ["E-commerce", "AI Integration", "Form Systems"]}, "application_type": "E-commerce Web Applications", "ui_instruct": [{"task": "Navigate to the shirt customization page via the main menu.", "expected_result": "The website should be redirected to a dedicated page where customers can choose shirt model, fabric, and input measurements.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Navigation"]}}, {"task": "Input a complete set of customization options including shirt model, fabric type, and measurements in the form fields.", "expected_result": "All fields should accept valid inputs without error, and the form should be able to submit successfully.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "Generation"]}}, {"task": "Generate a design based on the inputted customization options.", "expected_result": "A preview of the customized shirt design should be displayed, matching the selected model, fabric, and measurements.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency", "Component Styling"]}}, {"task": "Validate the preview option by changing one attribute (e.g., fabric type) and regenerate the design.", "expected_result": "The preview should update to reflect the new attribute correctly, demonstrating dynamic design generation.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "Form Operations"]}}, {"task": "Confirm the customization and proceed to the order checkout page.", "expected_result": "The system should redirect to the checkout page, where the customized shirt details are displayed along with the price.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Form Operations"]}}, {"task": "Fill in shipping and payment information on the checkout page and submit the order.", "expected_result": "The system should accept valid credit card information, process the order without errors, and provide an order confirmation message.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Payment", "E-commerce"]}}, {"task": "Verify that shirt customization form fields provide feedback or validation warnings for incorrect input (e.g., invalid measurement entries).", "expected_result": "Proper feedback should guide the user in correcting any input errors before proceeding with customization.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Verify that the website uses 'floral white' as the background color and 'dark goldenrod' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'floral white' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark goldenrod', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000052", "instruction": "Please implement a blue-collar job site that connects blue-collar workers with employers. The website should allow users to create profiles, including name, contact information, skills and qualifications, email address, and photos. Users can browse and search job listings, including construction workers, plumbers, electricians, and more. Apply ivory for the layout background and forest green for interactive elements.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "E-commerce", "Authentication"]}, "application_type": "Job Search Platforms", "ui_instruct": [{"task": "Verify that a user can update their profile information (e.g., skills, contact details).", "expected_result": "Updates are saved correctly and reflected in the user's profile without errors.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Authentication Flows"]}}, {"task": "Check the job search functionality by searching for \"electrician\" positions.", "expected_result": "Search results display relevant job listings for electrician positions only, including the job title, employer, and location.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Confirm that employers can post a new job listing with all required information (job description, requirements, contact details).", "expected_result": "Job listing is successfully created and appears in the job listings with all entered details correctly displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "E-commerce"]}}, {"task": "Ensure the navigation links (home, profiles, job postings) are working correctly.", "expected_result": "Clicking on each navigation link redirects the user to the appropriate page without errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Test that users can view detailed job descriptions by clicking on a job listing.", "expected_result": "Detailed job information is displayed, including job description, requirements, and employer contact details.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Verify that the website uses 'ivory' as the background color and 'forest green' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'ivory' and components (such as buttons, cards, headers, etc.) are styled with the color 'forest green', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000060", "instruction": "Please implement an adult vocabulary learning website that includes a variety of quizzes and word games, such as crossword puzzles, unjumble letters, finding synonyms and antonyms, flashcards, and fill-in-the-blank. The website should have a dashboard that displays a progress summary. A set of 10 new words should be taught every week, and users should be able to choose an avatar and play a simple game while waiting in the waiting room. The website should include a home page, 5 activity pages, a dashboard, and blog pages. Assign light gray to body backgrounds and dark red to main components.", "Category": {"primary_category": "User Interaction", "subcategories": ["Form Systems", "Data Visualization", "AI Integration"]}, "application_type": "Learning Platforms", "ui_instruct": [{"task": "Navigate to each of the 5 activity pages and verify that each page correctly begins an activity (crossword puzzle, unjumble letters, etc.).", "expected_result": "Each activity page loads a distinct word game or quiz, relevant to vocabulary learning.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "E-commerce", "Communication"]}}, {"task": "On the dashboard, verify that the progress summary updates after completing a word game.", "expected_result": "The dashboard displays updated progress statistics reflecting the recently completed game.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Access the weekly new words section and verify the display of exactly 10 new words.", "expected_result": "Ten new vocabulary words are displayed, aligning with the current week's learning schedule.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Validate the functionality of selecting and setting an avatar in the waiting room.", "expected_result": "The selected avatar is visibly updated and persists through page changes and session reloads.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["File operation", "UI Consistency"]}}, {"task": "Test navigation from the home page to the blog and back to ensure accessibility and consistent navigation.", "expected_result": "Both transitions occur smoothly without errors, maintaining user session state.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Play the simple game available in the waiting room.", "expected_result": "The game ends successfully.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'light gray' as the background color and 'dark red' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light gray' and components (such as buttons, cards, headers, etc.) are styled with the color 'dark red', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000074", "instruction": "Please create a biography website to display a person's life and achievements. The website should have functionalities to display basic information, life experiences, achievements, and honors. Users should be able to browse biographies, view detailed information, and search for related content. The website should have a search function, allowing users to quickly find relevant information. Assign snow as the background color and apply dim gray to all elements.", "Category": {"primary_category": "Content Presentation", "subcategories": ["Static Page Generation", "Data Visualization"]}, "application_type": "Personal Portfolio Sites", "ui_instruct": [{"task": "Navigate to the homepage and verify the presence of basic information about the person.", "expected_result": "The homepage should display the person's full name, birthdate, and a summary of their life and achievements.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Details Information"]}}, {"task": "Click on the \"Life Experiences\" section link in the main navigation menu.", "expected_result": "The user is directed to a page detailing the person's life experiences, which should include a timeline or descriptive list of key life events.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Access the \"Achievements and Honors\" section via the navigation menu.", "expected_result": "The page should list the person's key achievements and honors in a chronological or categorized format, with corresponding dates or context.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Use the search function to look up a specific keyword related to the person's biography (e.g., \"Nobel Prize\").", "expected_result": "The search results should display relevant sections or pages containing the keyword, enabling easy access to detailed information.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Check the navigation flow to ensure users can easily move between \"Home,\" \"Life Experiences,\" \"Achievements,\" and \"Search\" sections.", "expected_result": "All navigation links should be functional, allowing seamless transitions between different sections without errors or broken links.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'snow' as the background color and 'dim gray' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'snow' and components (such as buttons, cards, headers, etc.) are styled with the color 'dim gray', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000083", "instruction": "Please implement a detective agency case management app for managing cases and tracking work hours. The app should have functionalities for real-time reporting, data collection and storage, work hours tracking, estimated expense sheet generation, and service assignment sheet. Users should be able to browse case information, submit real-time reports, log work hours, and view estimated expense sheets and service assignment sheets. Apply beige as the background; style all components with saddle brown.", "Category": {"primary_category": "Data Management", "subcategories": ["CRUD Operations", "API Integration", "Big Data"]}, "application_type": "Project Management Tools", "ui_instruct": [{"task": "Verify that case information is displayed accurately and can be browsed.", "expected_result": "The user can navigate through different cases, and each case displays detailed and correct information as per database or test data.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Attempt to submit a real-time report on a case.", "expected_result": "The report is successfully submitted, and a confirmation message is displayed to the user. The report appears in the case's report history.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation", "Dynamic Content Rendering"]}}, {"task": "Log work hours for a specific case.", "expected_result": "Work hours are successfully logged, and the total hours are updated in real-time in the case details.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations"]}}, {"task": "Generate an estimated expense sheet for a particular case.", "expected_result": "An estimated expense sheet is generated accurately, reflecting the required calculations and displaying all necessary details to the user.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Generation"]}}, {"task": "Access the service assignment sheet and ensure it is displayed correctly.", "expected_result": "The service assignment sheet is accessible and presents all relevant information clearly associated with the selected case.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Test the navigation functionality from the case management screen back to the dashboard.", "expected_result": "The user can successfully navigate back to the main dashboard without any errors.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering"]}}, {"task": "Verify that the website uses 'beige' as the background color and 'saddle brown' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'beige' and components (such as buttons, cards, headers, etc.) are styled with the color 'saddle brown', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}
{"id": "000097", "instruction": "Please implement a travel and camping website and web app for Europe, showcasing tourist attractions and campsites across the continent. The website should have functionalities for searching, booking, and reviewing. Users should be able to browse tourist attractions and campsites in different countries and cities, book attractions and campsites of interest, and review the attractions and campsites they have visited. Establish light pink as the main background and medium violet red for the controls.", "Category": {"primary_category": "User Interaction", "subcategories": ["E-commerce", "Form Systems", "Data Visualization"]}, "application_type": "Travel Booking Portals", "ui_instruct": [{"task": "Search for tourist attractions in Paris, France, using the search functionality.", "expected_result": "A list of relevant tourist attractions in Paris is displayed, and each attraction includes essential details like name, location, and a brief description.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Searching"]}}, {"task": "Book a campsite in Tuscany, Italy, ensuring the booking process is completed.", "expected_result": "The campsite is successfully booked, and a confirmation message or page with booking details, such as date and location, is displayed.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["E-commerce", "Form Operations", "Payment"]}}, {"task": "Submit a review for a recently visited campsite in Bavaria, Germany.", "expected_result": "The review is successfully submitted and appears publicly under the campsite's reviews section, along with any ratings assigned.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Communication", "Form Operations"]}}, {"task": "Navigate through different country sections to browse available campsites and tourist attractions.", "expected_result": "The user can seamlessly navigate from one country section to another without errors, and relevant attractions and campsites for each country are displayed.", "task_category": {"primary_category": "Data Display Testing", "subcategories": ["Dynamic Content Rendering", "Details Information"]}}, {"task": "Use the website to book a tourist attraction and verify that the booking form captures required details (e.g., name, date, time).", "expected_result": "The booking form functions correctly, all necessary fields are required, and upon submission, a confirmation page appears with booking details.", "task_category": {"primary_category": "Functional Testing", "subcategories": ["Form Operations", "E-commerce"]}}, {"task": "Verify that the website uses 'light pink' as the background color and 'medium violet red' as the component color, as specified in the design requirements.", "expected_result": "The website has a background color of 'light pink' and components (such as buttons, cards, headers, etc.) are styled with the color 'medium violet red', accurately reflecting the design instruction.", "task_category": {"primary_category": "Design Validation Testing", "subcategories": ["UI Consistency"]}}]}